// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package review

import (
	"github.com/IBM/sarama"
	"github.com/KNICEX/InkFlow/internal/ai"
	"github.com/KNICEX/InkFlow/internal/review/internal/event"
	"github.com/KNICEX/InkFlow/internal/review/internal/service"
	"github.com/KNICEX/InkFlow/internal/review/internal/service/llm"
	"github.com/KNICEX/InkFlow/pkg/logx"
	"go.temporal.io/sdk/client"
)

// Injectors from wire.go:

func InitAsyncService(producer sarama.SyncProducer, l logx.Logger) service.AsyncService {
	reviewProducer := event.NewKafkaReviewProducer(producer)
	asyncService := llm.NewAsyncWorkflowService(reviewProducer)
	return asyncService
}

func InitReviewConsumer(workflowCli client.Client, saramaCli sarama.Client, service3 ai.LLMService, l logx.Logger) *event.ReviewConsumer {
	serviceService := llm.NewLLMService(service3)
	reviewConsumer := event.NewReviewConsumer(workflowCli, serviceService, saramaCli, l)
	return reviewConsumer
}
